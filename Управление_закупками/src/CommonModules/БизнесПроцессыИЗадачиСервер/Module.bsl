#Область ПрограммныйИнтерфейс

Функция БППередачаЗаказаВОМТСУжеСуществует(ВнутреннийЗаказ) Экспорт 
	
	Если ПолучитьБППередачаЗаказаВОМТС(ВнутреннийЗаказ) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьБППередачаЗаказаВОМТС(ВнутреннийЗаказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаЗаказаВОМТС.Ссылка КАК Ссылка
	|ИЗ
	|	БизнесПроцесс.ПередачаЗаказаВОМТС КАК ПередачаЗаказаВОМТС
	|ГДЕ
	|	ПередачаЗаказаВОМТС.ВнутреннийЗаказ = &ВнутреннийЗаказ
	|	И НЕ ПередачаЗаказаВОМТС.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаЗаказаВОМТС.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ВнутреннийЗаказ", ВнутреннийЗаказ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();	
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПоследююЗадачуПоТочкеМаршрута(БизнесПроцесс, ТочкаМаршрута) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗадачиИсполнителей.Ссылка КАК Ссылка
	|ИЗ
	|	Задача.ЗадачиИсполнителейПТО КАК ЗадачиИсполнителей
	|ГДЕ
	|	ЗадачиИсполнителей.БизнесПроцесс = &БизнесПроцесс
	|	И ЗадачиИсполнителей.ТочкаМаршрута = &ТочкаМаршрута
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗадачиИсполнителей.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий(); 
	Возврат Выборка.Ссылка;
	
КонецФункции                  	

Функция СоздатьБПредачаЗаказаВОМТС(ВнутреннийЗаказ) Экспорт 
	
	Если БППередачаЗаказаВОМТСУжеСуществует(ВнутреннийЗаказ) Тогда
		
		Возврат Ложь;   //Имеется не завершенный БП ПередачаЗаказаВОМТС.... Что-то пошло не так.
		
	КонецЕсли;
	
	БизнесПроцесс = БизнесПроцессы.ПередачаЗаказаВОМТС.СоздатьБизнесПроцесс();
	БизнесПроцесс.Дата = ТекущаяДатаСеанса();
	БизнесПроцесс.ВнутреннийЗаказ = ВнутреннийЗаказ; 
	
	Попытка
		
		БизнесПроцесс.Записать(); 

	Исключение    
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	БизнесПроцесс.Старт();
	
	Возврат БизнесПроцесс.Ссылка;
	
КонецФункции

Процедура СоздатьЗадачуРаспределениеЗаявкиПоИсполителям(ВнутреннийЗаказ, СписокМатериалов) Экспорт
	
	НоваяЗадача = Задачи.ЗадачиИсполнителейОМТС.СоздатьЗадачу();  

	НоваяЗадача.Дата = ТекущаяДатаСеанса(); 
	
	ВнутреннийЗаказНомерИДата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВнутреннийЗаказ,"Номер, Дата");
	НоваяЗадача.Наименование = СтрШаблон("Распределить номенклатуру внутреннего заказа № %1 от %2 по исполнителям.", 
										ВнутреннийЗаказНомерИДата.Номер, Формат(ВнутреннийЗаказНомерИДата.Дата,"ДФ=dd.MM.yyyy")); 	 
	НоваяЗадача.Инициатор = КадрыСервер.ТекущийСотрудник();
	НоваяЗадача.Должность = Справочники.Должности.РуководительОМТС; 
	НоваяЗадача.ВнутреннийЗаказ = ВнутреннийЗаказ;
	
	НоваяЗадача.СписокНоменклатуры.Загрузить(СписокМатериалов);
	НоваяЗадача.Записать(); 
		
КонецПроцедуры

Процедура СоздатьЗадачиСотрудникамДляПодтвержденияРаспределеннойНоменклатуры(ВнутреннийЗаказ, ТаблицаНоменклатуры) Экспорт

	Если  ТаблицаНоменклатуры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СписокНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписокНоменклатуры.Количество КАК Количество,
		|	СписокНоменклатуры.Исполнитель КАК Исполнитель,
		|	СписокНоменклатуры.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры
		|ПОМЕСТИТЬ ВТСписокНоменклатуры
		|ИЗ
		|	&СписокНоменклатуры КАК СписокНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	ВТСписокНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВТСписокНоменклатуры.Количество КАК Количество,
		|	ВТСписокНоменклатуры.Исполнитель КАК Исполнитель,
		|	ВТСписокНоменклатуры.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры
		|ИЗ
		|	ВТСписокНоменклатуры КАК ВТСписокНоменклатуры
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕдиницаИзмерения),
		|	СУММА(Количество),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДополнительныеХарактеристикиНоменклатуры)
		|ПО
		|	Исполнитель";   
		Запрос.УстановитьПараметр("СписокНоменклатуры",ТаблицаНоменклатуры);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка.Следующий() Цикл 
			
			НоваяЗадача = Задачи.ЗадачиИсполнителейОМТС.СоздатьЗадачу();  	
			НоваяЗадача.Дата = ТекущаяДатаСеанса(); 
			
			ВнутреннийЗаказНомерИДата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВнутреннийЗаказ,"Номер, Дата");
			НоваяЗадача.Наименование = СтрШаблон("Подтвердить распределение номенклатуры внутреннего заказа № %1 от %2 по исполнителям.", 
										ВнутреннийЗаказНомерИДата.Номер, Формат(ВнутреннийЗаказНомерИДата.Дата,"ДФ=dd.MM.yyyy")); 	 
			НоваяЗадача.Инициатор = КадрыСервер.ТекущийСотрудник();
			НоваяЗадача.Исполнитель = Выборка.Исполнитель; 
			НоваяЗадача.ВнутреннийЗаказ = ВнутреннийЗаказ;
			
			//Заполнить табличную часть задачи
			ВыборкаИсполнитель = Выборка.Выбрать();  
			Пока ВыборкаИсполнитель.Следующий() Цикл
				
				ТекущаяСтрока = НоваяЗадача.СписокНоменклатуры.Добавить();	
				ТекущаяСтрока.Номенклатура = ВыборкаИсполнитель.Номенклатура; 
				ТекущаяСтрока.ДополнительныеХарактеристикиНоменклатуры = ВыборкаИсполнитель.ДополнительныеХарактеристикиНоменклатуры;
				ТекущаяСтрока.ЕдиницаИзмерения = ВыборкаИсполнитель.ЕдиницаИзмерения;
				ТекущаяСтрока.Количество = ВыборкаИсполнитель.Количество;
				ТекущаяСтрока.Исполнитель = ВыборкаИсполнитель.Исполнитель;
			КонецЦикла; 
			
			НоваяЗадача.Записать(); 
			
		КонецЦикла;
		
	КонецПроцедуры
	
#КонецОбласти