
#Область ПрограммныйИнтерфейс  

// Проверяет записываемый элемент справочника на наличие двойников.
// ФормаРеквизитОбъект  	- Реквизит Объект формы элемента справочника .
// СтрокаНаименованийРеквизитов - Строка наименований проверяемых реквизитов через запятую. 
// Результат истина, если в справочнике имеется совпадение с записываемым элементом.
// Иначе ложь.
Функция ИмеетсяДвойникВСправочнике(ФормаРеквизитОбъект, СтрокаНаименованийРеквизитов = "Наименование") Экспорт
	
	Результат = Ложь;
	ИмяСправочника = Метаданные.НайтиПоТипу(ТипЗнч(ФормаРеквизитОбъект.Ссылка)).ПолноеИмя();   
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИмяСправочника.Ссылка
	|ИЗ
	|	" + ИмяСправочника + " КАК ИмяСправочника
	|ГДЕ 
	| 	ИмяСправочника.Ссылка <> &Ссылка" + ПолучитьУсловиеЗапроса(СтрокаНаименованийРеквизитов); 
	
	УстановитьПараметрыЗапроса(Запрос, ФормаРеквизитОбъект, СтрокаНаименованийРеквизитов);
	
	РезультатЗапроса = Запрос.Выполнить();	
		
	Возврат Не РезультатЗапроса.Пустой();
	                     	
КонецФункции //НайтиСовпадениеВСправочнике 

Процедура ДобавитьВСправочникНовыеЭлементы(ИмяСправочника = "Номенклатура", Знач ТЗЗагружаемыеДанные, ИмяРеквизитаНаименование = "Наименование" ) Экспорт	
	
	// В справочник ИмяСправочника добавляется список элементов из ТЗЗагружаемыеДанные.
	// У добавленных элементах заполняется только одно обязательное поле с реквизитом ИмяРеквизитаНаименование.
	// ТаблицаЗначений ТЗЗагружаемыеДанные должна иметь только одну колонку типа строка.
	
	
	ИмяКолонкиТЗЗагружаемыеДанные = ТЗЗагружаемыеДанные.Колонки[0].Имя;
		
	ТЗЗагружаемыеДанные.Свернуть(ИмяКолонкиТЗЗагружаемыеДанные); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТЗЗагружаемыеДанные.ИмяКолонкиЗагружаемыхДанных КАК СТРОКА(440)) КАК ПолноеНаименование
	|ПОМЕСТИТЬ ВТ_ТЗЗагружаемыеДанные
	|ИЗ
	|	&ТЗЗагружаемыеДанные КАК ТЗЗагружаемыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИмяСправочника.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК СсылкаСправочника,
	|	ВТ_ТЗЗагружаемыеДанные.ПолноеНаименование КАК ПолноеНаименование
	|ПОМЕСТИТЬ ВТ_ИТОГ
	|ИЗ
	|	ВТ_ТЗЗагружаемыеДанные КАК ВТ_ТЗЗагружаемыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ИмяСправочника
	|		ПО ВТ_ТЗЗагружаемыеДанные.ПолноеНаименование = ИмяСправочника.ПолноеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИТОГ.ПолноеНаименование КАК ПолноеНаименование
	|ИЗ
	|	ВТ_ИТОГ КАК ВТ_ИТОГ
	|ГДЕ
	|	ВТ_ИТОГ.СсылкаСправочника = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТ_ИТОГ.ПолноеНаименование <> """"";  
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПолноеНаименование",ИмяРеквизитаНаименование);
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"Номенклатура",ИмяСправочника); 
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИмяКолонкиЗагружаемыхДанных",ИмяКолонкиТЗЗагружаемыеДанные);

	Запрос.УстановитьПараметр("ТЗЗагружаемыеДанные", ТЗЗагружаемыеДанные);
	
	РезультатЗапроса = Запрос.Выполнить();  
	
	Если  Не РезультатЗапроса.Пустой() Тогда
		
		СписокНовыхЭлементовСправочника = РезультатЗапроса.Выгрузить();  
		
		НачатьТранзакцию();
		Попытка
			
			Для Каждого НовыйЭлемент Из СписокНовыхЭлементовСправочника Цикл
				
				НовыйЭлементСправочника = Справочники[ИмяСправочника].СоздатьЭлемент();
				НовыйЭлементСправочника[ИмяРеквизитаНаименование] = НовыйЭлемент[ИмяРеквизитаНаименование];
				СтроковыеФункцииКлиентСервер.УдалитьЛишниеСимволы(НовыйЭлементСправочника[ИмяРеквизитаНаименование]);
				
				НовыйЭлементСправочника.Записать();		
				
			КонецЦикла; 
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = "Ошибка! Новые элементы не добавлены в справочник(и)...";
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			 
		КонецПопытки;	
		
	КонецЕсли;

КонецПроцедуры 

Функция РабочаяДокументацияЯвляетсяПроектом(Знач РабочаяДокументация) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочаяДокументация.БазовыйДокумент,"ВидДокумента") = Перечисления.ВидДокумента.Проект;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьУсловиеЗапроса(СтрокаНаименованийРеквизитов)
	
	МассивНаименованийРеквизитов = СтрРазделить(СтрокаНаименованийРеквизитов, " ,", Ложь);
	УсловиеЗапроса = ""; 
	Для Позиция = 0 По МассивНаименованийРеквизитов.Количество()-1 Цикл
		УсловиеЗапроса = УсловиеЗапроса + " И ИмяСправочника." + МассивНаименованийРеквизитов[Позиция]  + "= &Параметр" + Позиция;	
	КонецЦикла;
	Возврат УсловиеЗапроса 	
	
КонецФункции // ПолучитьУсловиеЗапроса()      

Процедура УстановитьПараметрыЗапроса(Запрос, ФормаРеквизитОбъект, СтрокаНаименованийРеквизитов)
	Запрос.УстановитьПараметр("Ссылка", ФормаРеквизитОбъект.Ссылка);	
	МассивНаименованийРеквизитов = СтрРазделить(СтрокаНаименованийРеквизитов, " ,", Ложь);	
    Для Позиция = 0 По МассивНаименованийРеквизитов.Количество()-1 Цикл
		Запрос.УстановитьПараметр("Параметр" + Позиция, ФормаРеквизитОбъект[МассивНаименованийРеквизитов[Позиция]]);
	КонецЦикла;
КонецПроцедуры //УстановитьПараметрыЗапроса  

#КонецОбласти

