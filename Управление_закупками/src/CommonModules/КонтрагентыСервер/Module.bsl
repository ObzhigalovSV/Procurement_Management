#Область ПрограммныйИнтерфейс 

Процедура ПриСозданииНаСервере(ФормаСпискаКонтрагента)Экспорт
	
	СоздатьРеквизитыДляОтображенияКИ(ФормаСпискаКонтрагента);
	
КонецПроцедуры

// Проверяет, выбран-ли из списка формы  именно группа, а не Контрангент или элемент группировки.
//
// Параметры:
//  Контрагент      -  Проверяемый сонтранент.
//
Функция ВыбранаГруппаСправочникаКонтрагента(Контрагент) Экспорт 
	
	Если ТипЗнч(Контрагент) <>  Тип("СправочникСсылка.Контрагенты")	 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.ЭтоГруппа КАК ЭтоГруппа
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.ЭтоГруппа;
	
КонецФункции  

Функция ЗаказчикПоУмолчанию() Экспорт

	Заказчик = Константы.ЗаказчикПоУмолчанию.Получить();
	Возврат Заказчик;
	
КонецФункции


#КонецОбласти   

#Область СлужебныеПроцедурыИФункци

Процедура СоздатьРеквизитыДляОтображенияКИ(Форма) Экспорт
	
	ДобавляемыеРеквизиты = Новый Массив;
	ОписаниеТипаСтроки500 = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(500));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	               |	ВидыКонтактнойИнформации.Наименование КАК Наименование,
	               |	ВЫБОР
	               |		КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеУпорядочивания
	               |ИЗ
	               |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	               |ГДЕ
	               |	ВидыКонтактнойИнформации.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникКонтрагенты)
	               |	И НЕ ВидыКонтактнойИнформации.ПометкаУдаления
	               |	И ВидыКонтактнойИнформации.Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЗначениеУпорядочивания,
	               |	Наименование";
	
	ТаблицаВидовКИ = Запрос.Выполнить().Выгрузить();  
	
	МаксимальнаяДлинаВидаКИ = 0;
	Для каждого СтрокаКИ Из ТаблицаВидовКИ Цикл
		Если СтрДлина(СтрокаКИ.Наименование) > МаксимальнаяДлинаВидаКИ Тогда
			МаксимальнаяДлинаВидаКИ = СтрДлина(СтрокаКИ.Наименование + 3);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеТипаСтрокиВидКИ = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(МаксимальнаяДлинаВидаКИ + 3));
	Форма.Элементы.ГруппаВидыКИ.Ширина = МаксимальнаяДлинаВидаКИ + 3;
	Форма.КоличествоВидовКИ = ТаблицаВидовКИ.Количество();
	
	Для инд = 1 По Форма.КоличествоВидовКИ Цикл
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗаголовокВидКИ_" + Строка(инд), ОписаниеТипаСтрокиВидКИ,));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидКИ_" + Строка(инд), ОписаниеТипаСтроки500,));
		
	КонецЦикла;
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для инд = 1 По Форма.КоличествоВидовКИ Цикл
		
		Элемент = Форма.Элементы.Добавить("ЗаголовокВидКИ_" + Строка(инд), Тип("ПолеФормы"), Форма.Элементы.ГруппаВидыКИ);
		Элемент.Вид                      = ВидПоляФормы.ПолеНадписи;
		Элемент.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.ВертикальноеПоложение    = ВертикальноеПоложениеЭлемента.Верх;
		Элемент.ПутьКДанным              = "ЗаголовокВидКИ_" + Строка(инд);
		Элемент.АвтоВысотаЯчейки         = Истина;
		Элемент.РастягиватьПоВертикали   = Ложь;
		Элемент.РастягиватьПоГоризонтали = Истина;
		Форма["ЗаголовокВидКИ_" + Строка(инд)] = ТаблицаВидовКИ[инд - 1].Наименование + " :";
		
		Элемент = Форма.Элементы.Добавить("ВидКИ_" + Строка(инд), Тип("ПолеФормы"), Форма.Элементы.ГруппаЗначениеКИ);
		Элемент.Вид                      = ВидПоляФормы.ПолеНадписи;
		Элемент.ПоложениеЗаголовка       = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элемент.ВертикальноеПоложение    = ВертикальноеПоложениеЭлемента.Верх;
		Элемент.ПутьКДанным              = "ВидКИ_" + Строка(инд);
		Элемент.ЦветТекста               = ЦветаСтиля.ИндивидуальнаяЦена;
		Элемент.АвтоВысотаЯчейки         = Истина;
		Элемент.РастягиватьПоВертикали   = Ложь;
		Элемент.РастягиватьПоГоризонтали = Истина;
		
	КонецЦикла;
	
	Для инд = 1 По Форма.КоличествоВидовКИ Цикл
		
		ЭлементУсловногоОформления = Форма.УсловноеОформление.Элементы.Добавить();
		
		ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидКИ_" + Строка(инд));
		ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.ПравоеЗначение = НСтр("ru = '<Не указан>'");
		ЭлементОтбораДанных.Использование  = Истина;
		
		ЭлементЦветаОформления               = ЭлементУсловногоОформления.Оформление.Элементы.Найти("TextColor");
		ЭлементЦветаОформления.Значение      = Метаданные.ЭлементыСтиля.ЦветТекстаОтмененнойСтрокиДокумента.Значение;
		ЭлементЦветаОформления.Использование = Истина;
		
		НовыйЭлемент = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных("ВидКИ_" + Строка(инд));
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеКонтрагентаДляПанелиИнформации(Контрагент) Экспорт
	
	ДанныеКонтрагента = Новый Структура;
	ДанныеКонтрагента.Вставить("Наименование", "");
	//ДанныеКонтрагента.Вставить("КонтактнаяИнформация", "");
	ДанныеКонтрагента.Вставить("КоличествоКонтактныхЛиц", 0);
	ДанныеКонтрагента.Вставить("КоличествоДоговоров", 0); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Наименование КАК ВидКИ,
	|	ЕСТЬNULL(КонтрагентыКонтактнаяИнформация.Представление, """") КАК ПредставлениеКИ,
	|	ВЫБОР
	|		КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗначениеУпорядочивания,
	|	ВидыКонтактнойИнформации.Ссылка КАК СсылкаВидКИ
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ПО ВидыКонтактнойИнформации.Ссылка = КонтрагентыКонтактнаяИнформация.Вид
	|			И (КонтрагентыКонтактнаяИнформация.Ссылка = &Контрагент)
	|ГДЕ
	|	ВидыКонтактнойИнформации.Родитель = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СправочникКонтрагенты)
	|	И НЕ ВидыКонтактнойИнформации.ПометкаУдаления
	|	И ВидыКонтактнойИнформации.Тип <> ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗначениеУпорядочивания,
	|	ВидКИ
	|ИТОГИ ПО
	|	СсылкаВидКИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КонтактныеЛицаКонтрагентов.Ссылка) КАК КоличествоКонтактныхЛиц
	|ИЗ
	|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	|ГДЕ
	|	КонтактныеЛицаКонтрагентов.Владелец = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДоговорыКонтрагентов.Ссылка) КАК КоличествоДоговоров
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеКонтрагента = Результат[0].Выбрать();

	Если ВыборкаДанныеКонтрагента.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеКонтрагента, ВыборкаДанныеКонтрагента);	
	КонецЕсли;
	КонтактнаяИнформацияТаблица = Новый ТаблицаЗначений;
	КонтактнаяИнформацияТаблица.Колонки.Добавить("ВидКИ");
	КонтактнаяИнформацияТаблица.Колонки.Добавить("ПредставлениеКИ");
	
	
	ВыборкаВидыКИ = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВидыКИ.Следующий() Цикл
		ВыборкаДетали = ВыборкаВидыКИ.Выбрать();
		ПредставлениеКИ = "";
		Пока ВыборкаДетали.Следующий() Цикл
			ПредставлениеКИ = ПредставлениеКИ + ?(ПустаяСтрока(ПредставлениеКИ),"" ,"; ") + ВыборкаДетали.ПредставлениеКИ; 
		КонецЦикла;
		НоваяСтрока = КонтактнаяИнформацияТаблица.Добавить();
		НоваяСтрока.ВидКИ = ВыборкаВидыКИ.ВидКИ;
		НоваяСтрока.ПредставлениеКИ = ПредставлениеКИ;
	КонецЦикла; 
	ДанныеКонтрагента.Вставить("КонтактнаяИнформацияТаблица",КонтактнаяИнформацияТаблица);    
	
	
	ВыборкаКоличестваКонтактныхЛиц = Результат[2].Выбрать();
	Если ВыборкаКоличестваКонтактныхЛиц.Следующий() Тогда
		
		ДанныеКонтрагента.КоличествоКонтактныхЛиц         = ВыборкаКоличестваКонтактныхЛиц.КоличествоКонтактныхЛиц; 
		
	КонецЕсли;  
	
	ВыборкаКоличестваДоговоров = Результат[3].Выбрать();
	Если ВыборкаКоличестваДоговоров.Следующий() Тогда
		
		ДанныеКонтрагента.КоличествоДоговоров         = ВыборкаКоличестваДоговоров.КоличествоДоговоров; 
		
	КонецЕсли;

	
	Возврат ДанныеКонтрагента;	

КонецФункции

#КонецОбласти 