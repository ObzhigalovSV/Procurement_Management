#Область ОбработчикиСобытийФормы

  &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)  
	 	
	АвтоЗаголовок = Ложь;  
	РабочаяДокументация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВнутреннийЗаказ, "РабочаяДокументация");
	НаименованиеРабочейДокументации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочаяДокументация, "Наименование");	
	Заголовок = СтрШаблон("%1 (%2)",Объект.Наименование,НаименованиеРабочейДокументации); 

	Если Объект.Выполнена Тогда
		ЭтаФорма.ТолькоПросмотр = Истина; 
		Элементы.СотрудникОМТС.ТолькоПросмотр = Истина;
		ИнструкцияВыполненияЗадачи = "Задача выполнена";
	Иначе
		ИнструкцияВыполненияЗадачи = "Для выполнения задачи необходимо:
										|1. Назначить исполнителей для каждой номенклатуры заказа.
										|2. Если все устраивает, нажмите кнопку - Сохранить и закрыть.
										|3. Обратите внимание: Исполнители должны быть назначены по всем позициям.";

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьВнутреннийЗаказ(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", Объект.ВнутреннийЗаказ); 
	ОткрытьФорму("Документ.ВнутреннийЗаказ.Форма.ФормаДокумента",ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСотрудником(Команда)
	
	Сотрудник = Элементы.СотрудникОМТС;
	Если Не ЗначениеЗаполнено(СотрудникОМТС) Тогда
		
		ТекстСообщения = "Не заполнено поле Сотрудник ОМТС";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, "СотрудникОМТС");
	
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ВыбраннаяСтрока Из Элементы.СписокНоменклатуры.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.СписокНоменклатуры.ДанныеСтроки(ВыбраннаяСтрока);
		ДанныеСтроки.Исполнитель = СотрудникОМТС;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоИсполнителям(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		
		ТекстСообщения = "Заказ распределен не полностью.";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
		Возврат; 
		
	КонецЕсли;
	
	Если Модифицированность Тогда  
		Если Не ЭтаФорма.Записать() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	ДополнитьРегистрСведенийРаспределениеПоИсполнителямОМТС(); 
	
	СоздатьЗадачиСотрудникамДляПодтвержденияРаспределеннойНоменклатуры();
	ВыполнитьТекущуюЗадачуНаСервере();
	
	
	Оповестить("Запись_ЗадачиЗадачиИсполнителейОМТС");
	ЭтаФорма.Модифицированность = Ложь; 
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВыполнитьТекущуюЗадачуНаСервере()
		
	ТекущаяЗадача = РеквизитФормыВЗначение("Объект");
	ТекущаяЗадача.ВыполнитьЗадачу();
	
КонецФункции

&НаСервере
Процедура ДополнитьРегистрСведенийРаспределениеПоИсполнителямОМТС()
	
	НаборЗаписей = РегистрыСведений.РаспределениеПоИсполнителямОМТС.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.ВнутреннийЗаказ.Установить(Объект.ВнутреннийЗаказ); 
	НаборЗаписей.Прочитать();
	
	Для Каждого СтрокаТаблицы Из Объект.СписокНоменклатуры Цикл 
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Исполнитель)  Тогда 
			
			НоваяЗапись = НаборЗаписей.Добавить();	
			НоваяЗапись.Период = ТекущаяДатаСеанса();
			НоваяЗапись.ВнутреннийЗаказ = Объект.ВнутреннийЗаказ; 
			НоваяЗапись.Номенклатура = СтрокаТаблицы.Номенклатура;
			НоваяЗапись.ДополнительныеХарактеристикиНоменклатуры = СтрокаТаблицы.ДополнительныеХарактеристикиНоменклатуры;
			НоваяЗапись.ЕдиницаИзмерения = СтрокаТаблицы.ЕдиницаИзмерения;
			НоваяЗапись.СотрудникОМТС = СтрокаТаблицы.Исполнитель;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗадачиСотрудникамДляПодтвержденияРаспределеннойНоменклатуры()
	
	ТаблицаНоменклатуры = Объект.СписокНоменклатуры.Выгрузить();
	БизнесПроцессыИЗадачиСервер.СоздатьЗадачиСотрудникамДляПодтвержденияРаспределеннойНоменклатуры(Объект.ВнутреннийЗаказ, ТаблицаНоменклатуры);
		
КонецПроцедуры

#КонецОбласти
