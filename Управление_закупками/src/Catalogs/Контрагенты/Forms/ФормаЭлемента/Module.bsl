

#Область ОбработчикиСобытийФормы  

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметрыКИ = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметрыКИ.Вставить("ИмяЭлементаДляРазмещения", "ГруппаКонтактнаяИнформация");
	ДополнительныеПараметрыКИ.Вставить("ПоложениеЗаголовкаКИ", ПоложениеЗаголовкаЭлементаФормы.Лево); 
	ДополнительныеПараметрыКИ.Вставить("ОтложеннаяИнициализация", Истина);
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, ДополнительныеПараметрыКИ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)   
	
	Если ЗначениеЗаполнено(Объект.ИНН) 
		И СправочникиСервер.ИмеетсяДвойникВСправочнике(Объект,"ИНН" )  Тогда 	
		ТекстСообщения = НСтр("ru = 'Отказ в записи элемента.
		|Контрагент с таким ИНН уже существует в информационной базе.
		|Необходимо указать другую информацию.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.ИНН",,Отказ);		
	КонецЕсли;  
	
	Если Не ЗначениеЗаполнено(Объект.ИНН) 
		И СправочникиСервер.ИмеетсяДвойникВСправочнике(Объект,"Наименование" )  Тогда 	
		ТекстСообщения = НСтр("ru = 'Отказ в записи элемента.
		|Контрагент с таким наименованием уже существует в информационной базе.
		|Необходимо указать другую информацию, или указать ИНН'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,"Объект.Наименование",,Отказ);		
	КонецЕсли; 
	
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация                        
	


КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы       

&НаКлиенте
Процедура ЮридическоеФизическоеЛицоПриИзменении(Элемент)
	
	НастроитьСвойстваЭлементовИННКПП();
	
КонецПроцедуры  

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	//Допускается не заполнять ИНН
	Если ПустаяСтрока(Объект.ИНН) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоЮрЛицо = ЭтоЮрЛицо(Объект.ЮридическоеФизическоеЛицо);
	
	ТекстСообщения = "";
	
	Если НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН, ЭтоЮрЛицо, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ИНН",,);  
		
	КонецЕсли;     
	
КонецПроцедуры
	
&НаКлиенте
Процедура КПППриИзменении(Элемент)
	
	//Допускается не заполнять ИНН
	Если ПустаяСтрока(Объект.КПП) Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстСообщения = "";

	Если НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Объект.КПП, ТекстСообщения) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.КПП",,);  
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыФормыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	Если ТекущаяСтраница.Имя = ПараметрыКонтактнойИнформации.ГруппаКонтактнаяИнформация.ГруппаДляРазмещения 
		И Не ПараметрыКонтактнойИнформации.ГруппаКонтактнаяИнформация.ВыполненаОтложеннаяИнициализация Тогда
		
			КонтактнаяИнформацияПриСменеСтраницы();
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры


 #КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат )Экспорт
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаСервере
Процедура КонтактнаяИнформацияПриСменеСтраницы()
	
	УправлениеКонтактнойИнформацией.ВыполнитьОтложеннуюИнициализацию(ЭтотОбъект, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация


#КонецОбласти

#Область ОбработчикиКомандФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции   

&НаКлиенте
Процедура НастроитьСвойстваЭлементовИННКПП()
	
	Если Объект.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда  
		
		Элементы.ИНН.ПодсказкаВвода = "Введите ИНН 12 цифр"; 	
		
		Объект.КПП = "";
		Элементы.КПП.ПодсказкаВвода = "";
		Элементы.КПП.Доступность = Ложь; 
		
	Иначе  
		
		Элементы.ИНН.ПодсказкаВвода = "Введите ИНН 10 цифр";
		Элементы.КПП.ПодсказкаВвода = "Введите КПП 9 цифр";
		Элементы.КПП.Доступность = Истина; 
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
// Определяет, является ли контрагент юридическим лицом
//
// Параметры:
//	ЮридическоеФизическоеЛицо - Перечисления.ЮридическоеФизическоеЛицо - вид контрагента
//
// Возвращаемое значение:
//  Булево - Истина, если это юридическое лицо, Ложь в обратном случае.
//
Функция ЭтоЮрЛицо(ЮридическоеФизическоеЛицо) Экспорт
	
	Если ТипЗнч(ЮридическоеФизическоеЛицо) = Тип("ПеречислениеСсылка.ЮридическоеФизическоеЛицо") Тогда
		
		Возврат ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"); 
		
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_СправочникКонтрагенты");
КонецПроцедуры


#КонецОбласти   

