#Область ПрограммныйИнтерфейс  

Функция УстановитьРеквизитыПриСогласованииИОтправкиДокументаВОМТС(ВнутренниЗаказ, Согласован = Истина, ОтправитьВОМТС = Ложь) Экспорт
	
	Попытка
		ЗаблокироватьДанныеДляРедактирования(ВнутренниЗаказ);
	Исключение
		
		ТекстОшибки = НСтр("ru='Не удалось заблокировать %ВнутренниЗаказ%. %ОписаниеОшибки%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВнутренниЗаказ%", ВнутренниЗаказ);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВнутренниЗаказ);
		Возврат Ложь;
		
	КонецПопытки;
	
	Объект =  ВнутренниЗаказ.ПолучитьОбъект(); 
	
	Объект.ЗаказСогласованПТО = Согласован;
	Если Согласован Тогда
		
		Объект.Согласовал = КадрыСервер.ТекущийСотрудник();
		Объект.ДатаСогласования = ТекущаяДатаСеанса(); 
		
	Иначе
		
		Объект.Согласовал = Справочники.Сотрудники.ПустаяСсылка();
		Объект.ДатаСогласования = АдминистрированиеКластера.ПустаяДата();
		
	КонецЕсли;
	
	Объект.ЗаказОтправленВОМТС = ОтправитьВОМТС;
	
	Если ОтправитьВОМТС Тогда
		
		Объект.ОтправилВОМТС = КадрыСервер.ТекущийСотрудник();
		Объект.ДатаОтправкиЗаказаВОМТС = ТекущаяДатаСеанса(); 
		
	Иначе   
		
		Объект.ОтправилВОМТС = Справочники.Сотрудники.ПустаяСсылка();
		Объект.ДатаОтправкиЗаказаВОМТС = АдминистрированиеКластера.ПустаяДата();
		
	КонецЕсли;	
	
	Если Не Объект.ПроверитьЗаполнение() Тогда
		
		ТекстОшибки = НСтр("ru='Не удалось записать %ВнутренниЗаказ% по причине его не заполненности."); 
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВнутренниЗаказ%", ВнутренниЗаказ);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВнутренниЗаказ);
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Попытка
		
		Объект.Записать(РежимЗаписиДокумента.Проведение );
		
	Исключение
		
		ТекстОшибки = НСтр("ru='Не удалось записать %ВнутренниЗаказ%. %ОписаниеОшибки%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВнутренниЗаказ%", ВнутренниЗаказ);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ВнутренниЗаказ);
		Возврат Ложь;  
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Процедура УстановитьПараметрыЗагрузкиИзФайлаВТЧ(Параметры) Экспорт

КонецПроцедуры

Процедура СопоставитьЗагружаемыеДанные(АдресЗагружаемыхДанных, АдресТаблицыСопоставления, СписокНеоднозначностей, ПолноеИмяТабличнойЧасти, ДополнительныеПараметры) Экспорт 
	
	Товары = ПолучитьИзВременногоХранилища(АдресТаблицыСопоставления); // ТаблицаЗначений
	
	ЗагружаемыеДанные = ПолучитьИзВременногоХранилища(АдресЗагружаемыхДанных); // ТаблицаЗначений   
	УдалитьЛишниеСимволыВЗагружаемыхДанных(ЗагружаемыеДанные); 
	
	СправочникиСервер.ДобавитьВСправочникНовыеЭлементы("Номенклатура", ЗагружаемыеДанные.Скопировать(,"Номенклатура") ,"ПолноеНаименование");
	СправочникиСервер.ДобавитьВСправочникНовыеЭлементы("ДополнительныеХарактеристикиНоменклатуры", ЗагружаемыеДанные.Скопировать(,"ДополнительныеХарактеристикиНоменклатуры") ,"ПолноеНаименование");
	
	Запрос = Новый Запрос;
	Запрос.Текст =      
	

	"ВЫБРАТЬ
	|	ЗагружаемыеДанные.Идентификатор КАК Идентификатор,
	|	ВЫРАЗИТЬ(ЗагружаемыеДанные.Номенклатура КАК СТРОКА(440)) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ЗагружаемыеДанные.ДополнительныеХарактеристикиНоменклатуры КАК СТРОКА(440)) КАК ДополнительныеХарактеристикиНоменклатуры,
	|	ВЫРАЗИТЬ(ЗагружаемыеДанные.ЕдиницаИзмеренияЗаказа КАК СТРОКА(10)) КАК ЕдиницаИзмеренияЗаказа,
	|	ВЫРАЗИТЬ(ЗагружаемыеДанные.Количество КАК СТРОКА(20)) КАК Количество
	|ПОМЕСТИТЬ ВТЗагружаемыеДанные
	|ИЗ
	|	&ЗагружаемыеДанные КАК ЗагружаемыеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Номенклатура.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПолноеНаименование В
	|			(ВЫБРАТЬ
	|				ВТЗагружаемыеДанные.Номенклатура КАК Номенклатура
	|			ИЗ
	|				ВТЗагружаемыеДанные КАК ВТЗагружаемыеДанные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.ПолноеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДополнительныеХарактеристикиНоменклатуры.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТДополнительныеХарактеристикиНоменклатуры
	|ИЗ
	|	Справочник.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры
	|ГДЕ
	|	ДополнительныеХарактеристикиНоменклатуры.ПолноеНаименование В
	|			(ВЫБРАТЬ
	|				ВТЗагружаемыеДанные.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры
	|			ИЗ
	|				ВТЗагружаемыеДанные КАК ВТЗагружаемыеДанные)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДополнительныеХарактеристикиНоменклатуры.ПолноеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(КлассификаторЕдиницИзмерений.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТЕдиницаИзмерения
	|ИЗ
	|	Справочник.КлассификаторЕдиницИзмерений КАК КлассификаторЕдиницИзмерений
	|ГДЕ
	|	КлассификаторЕдиницИзмерений.Наименование В
	|			(ВЫБРАТЬ
	|				ВТЗагружаемыеДанные.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа
	|			ИЗ
	|				ВТЗагружаемыеДанные КАК ВТЗагружаемыеДанные)
	|
	|СГРУППИРОВАТЬ ПО
	|	КлассификаторЕдиницИзмерений.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗагружаемыеДанные.Идентификатор КАК Идентификатор,
	|	ЕСТЬNULL(ВТДополнительныеХарактеристикиНоменклатуры.Ссылка,ЗНАЧЕНИЕ(Справочник.ДополнительныеХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ДополнительныеХарактеристикиНоменклатуры,
	|	ЕСТЬNULL(ВТЕдиницаИзмерения.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерений.ПустаяСсылка)) КАК ЕдиницаИзмеренияЗаказа,
	|	ЕСТЬNULL(ВТНоменклатура.Ссылка,ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ВТЗагружаемыеДанные.Количество КАК Количество
	|ИЗ
	|	ВТЗагружаемыеДанные КАК ВТЗагружаемыеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНоменклатура КАК ВТНоменклатура
	|		ПО ВТЗагружаемыеДанные.Номенклатура = ВТНоменклатура.Ссылка.ПолноеНаименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеХарактеристикиНоменклатуры КАК ВТДополнительныеХарактеристикиНоменклатуры
	|		ПО ВТЗагружаемыеДанные.ДополнительныеХарактеристикиНоменклатуры = ВТДополнительныеХарактеристикиНоменклатуры.Ссылка.ПолноеНаименование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЕдиницаИзмерения КАК ВТЕдиницаИзмерения
	|		ПО ВТЗагружаемыеДанные.ЕдиницаИзмеренияЗаказа = ВТЕдиницаИзмерения.Ссылка.Наименование";
		
	Запрос.УстановитьПараметр("ЗагружаемыеДанные", ЗагружаемыеДанные);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗРезультат = РезультатЗапроса.Выбрать(); 
	
	Пока ТЗРезультат.Следующий() Цикл	
		
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТЗРезультат);
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Товары, АдресТаблицыСопоставления);

КонецПроцедуры  

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

  Процедура УдалитьЛишниеСимволыВЗагружаемыхДанных(ЗагружаемыеДанные)
	
	Для Каждого СтрокаТаблицы Из ЗагружаемыеДанные Цикл
		
		СтроковыеФункцииКлиентСервер.УдалитьЛишниеСимволы(СтрокаТаблицы.Номенклатура); 
		
		Если СтроковыеФункцииКлиентСервер.ВСтрокеЕстьБуквыИлиЦифры(СтрокаТаблицы.ДополнительныеХарактеристикиНоменклатуры) Тогда
			СтроковыеФункцииКлиентСервер.УдалитьЛишниеСимволы(СтрокаТаблицы.ДополнительныеХарактеристикиНоменклатуры);
		Иначе
			СтрокаТаблицы.ДополнительныеХарактеристикиНоменклатуры = "";
		КонецЕсли;
		
		СтроковыеФункцииКлиентСервер.УдалитьЛишниеСимволы(СтрокаТаблицы.ЕдиницаИзмеренияЗаказа);	
		СтрокаТаблицы.ЕдиницаИзмеренияЗаказа = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(СтрокаТаблицы.ЕдиницаИзмеренияЗаказа,".","Справа");
		
		СтроковыеФункцииКлиентСервер.УдалитьЛишниеСимволы(СтрокаТаблицы.Количество);	
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
