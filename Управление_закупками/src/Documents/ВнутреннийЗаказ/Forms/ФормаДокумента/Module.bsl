#Область ОбработчикиСобытийФормы      

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыФормыПриСозданииНаСервере(); 
	Если  Объект.ЗаказОтправленВОМТС Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
		АвтоЗаголовок = Ложь;
		Заголовок = СтрШаблон("Внутренний заказ %1 от %2 (только просмотр)", Объект.Номер, Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПроверитьЗаполнение()  Тогда
		Возврат;
	КонецЕсли;
	
	// Проверяем на двойника относительно рабочей документации, уточнения и вида поставки.
	Если ДокументыСервер.НайденДвойникВнутреннегоЗаказа(ТекущийОбъект) Тогда  
		
		ТекстСообщения = НСтр("ru = 'Отказ в записи элемента.
		|В информационной базе уже существует заказ по данной рабочей документации, уточнению и видом поставщика.
		|Необходимо указать другую информацию.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы      

&НаКлиенте
Процедура УточнениеПриИзменении(Элемент)
	
	СтроковыеФункцииКлиентСервер.УдалитьЛишниеПробелы(Объект.Уточнение);
	
КонецПроцедуры

 #КонецОбласти
 
 
#Область ОбработчикиСобытийЭлементовТаблицыФормы   

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда   		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;      
		ТекущиеДанные.ПорядковыйНомер = ДокументыКлиент.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер");    
	КонецЕсли;    
	
КонецПроцедуры  

&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.ПорядковыйНомер  = ДокументыКлиент.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер");
		НоваяСтрока.Номенклатура = ВыбранноеЗначение; 

	КонецЕсли;   
			
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ДанныеТекущейСтроки = Элементы.Товары.ТекущиеДанные;
	
	Если  ДанныеТекущейСтроки.Количество >= 0 Тогда
		
		ДанныеТекущейСтроки.ЗаказДляКорректировки = ПредопределенноеЗначение("Документ.ВнутреннийЗаказ.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы       

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);	
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормы,Элементы.Товары,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальныйПорядок(Команда)
	
	Объект.Товары.Сортировать("ПорядковыйНомер");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "ВнутреннийЗаказ.Товары";
	ПараметрыЗагрузки.Заголовок = НСтр("ru='Загрузка списка номенклатуры из файла'");   
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьСписокНоменклатурыИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыДляКорректировкиМинуса(Команда)       
	
	Если Не ТекущиеДанныеТабличнойЧастиЗаполненыВерно() Тогда
		
		Возврат;
		
	КонецЕсли;   
	
	ТекущиеДанныеСтрокиТЧ = Элементы.Товары.ТекущиеДанные;
	
	ТекущиеДанныеСтрокиТЧ.ЗаказДляКорректировки = ПредопределенноеЗначение("Документ.ВнутреннийЗаказ.ПустаяСсылка");
	
	ОписаниеОповещенияОЗакрытииФормы = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыВыбораДляКорректировкиМинуса",ЭтаФорма);
	
	ПараметрыФормы = ПараметрыОткрытияФормыВыбораНоменклатурыИзЗаказа();
 
	ОткрытьФорму("Документ.ВнутреннийЗаказ.Форма.ФормаВыбораНоменклатурыИзЗаказа", ПараметрыФормы,Элементы.Товары,,,,ОписаниеОповещенияОЗакрытииФормы, РежимОткрытияОкнаФормы .БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьТабличнуюЧастьПоТекущейКолонкеПоВозрастанию(Команда)  
	
	ИмяСортируемойКолонки = ИмяТекущейКолонкиТабличнойЧасти();
	
	Если ИмяСортируемойКолонки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Сортировать(ИмяТекущейКолонкиТабличнойЧасти());
	
КонецПроцедуры      

&НаКлиенте
Процедура СортироватьТабличнуюЧастьПоТекущейКолонкеПоУбыванию(Команда) 
	
	ИмяСортируемойКолонки = ИмяТекущейКолонкиТабличнойЧасти();
	
	Если ИмяСортируемойКолонки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Объект.Товары.Сортировать(ИмяТекущейКолонкиТабличнойЧасти() + " Убыв"); 
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции      

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПриСозданииНаСервере()    
		
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда
		ДолжностьОтветственного = КадрыСервер.ДолжностьСотрудникаНаДату(Объект.Ответственный, Объект.ДатаСоздания);
	Иначе
		ДолжностьОтветственного = "";  
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Согласовал) Тогда	
		ДолжностьСогласовал 	= КадрыСервер.ДолжностьСотрудникаНаДату(Объект.Согласовал, Объект.ДатаСогласования); 
	Иначе
		ДолжностьСогласовал = ""; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ОтправилВОМТС) Тогда
		ДолжностьОтправилВОМТС	= КадрыСервер.ДолжностьСотрудникаНаДату(Объект.ОтправилВОМТС, Объект.ДатаОтправкиЗаказаВОМТС);
	Иначе 
		ДолжностьОтправилВОМТС = ""; 
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Функция ПараметрыОткрытияФормыВыбораНоменклатурыИзЗаказа()
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ПараметрыФормы = Новый Структура();
	
	Если Параметры.Ключ.Пустая() Тогда
		ПараметрыФормы.Вставить("ВнутреннийЗаказ", Неопределено);
	Иначе
		ПараметрыФормы.Вставить("ВнутреннийЗаказ", Объект.Ссылка);
	КонецЕсли;    
	
	ПараметрыФормы.Вставить("РабочаяДокументация", Объект.РабочаяДокументация); 
	ПараметрыФормы.Вставить("Номенклатура", ТекущиеДанные.Номенклатура); 
	ПараметрыФормы.Вставить("ДополнительныеХарактеристикиНоменклатуры", ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры);
	ПараметрыФормы.Вставить("Количество", ТекущиеДанные.Количество); 
	ПараметрыФормы.Вставить("ЕдиницаИзмеренияЗаказа", ТекущиеДанные.ЕдиницаИзмеренияЗаказа);  
		
	АдресВоВременномХранилище = ПоместитьТабличнуюЧастьТоварыВоВременноеХранилище();
	ПараметрыФормы.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище); 
	
	Возврат ПараметрыФормы;

КонецФункции  

&НаСервере 
Функция ПоместитьТабличнуюЧастьТоварыВоВременноеХранилище();
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить());
	
КонецФункции

&НаКлиенте
Функция ТекущиеДанныеТабличнойЧастиЗаполненыВерно()
	
	
	ТекущиеДанныеЗаполненыВерно = Истина;

	Если Не ПроверитьЗаполнение() Тогда
		ТекущиеДанныеЗаполненыВерно = Ложь;
	КонецЕсли;   
	
	Если  Объект.Товары.Количество() = 0 Тогда
		
		ТекстСообщения = "Ошибка. Табличная часть должна содержать хотя бы одну строку.";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.Товары");
		
		Возврат Ложь;
	КонецЕсли;
	

	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	Если ТекущиеДанные.Количество >= 0  Тогда 
		
		ТекстСообщения = "Подбор для корректировки минуса работает только с количеством меньше нуля.";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Объект.Товары[" + Элементы.Товары.ТекущаяСтрока + "].Количество");
		ТекущиеДанныеЗаполненыВерно = Ложь;
		
	КонецЕсли;
	
	Возврат ТекущиеДанныеЗаполненыВерно;

КонецФункции

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыВыбораДляКорректировкиМинуса(РезультатЗакрытия, ДополнительныеПараметры) Экспорт 
		
	Если  ЗначениеЗаполнено(РезультатЗакрытия) Тогда 	
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		
		ТекущиеДанные.ЗаказДляКорректировки = РезультатЗакрытия.ВнутреннийЗаказ;
		
		Если РезультатЗакрытия.Свойство("Номенклатура") Тогда
			
			ТекущиеДанные.Номенклатура = РезультатЗакрытия.Номенклатура; 
			
		КонецЕсли;  
		
		Если РезультатЗакрытия.Свойство("ДополнительныеХарактеристикиНоменклатуры") Тогда
			
			ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры = РезультатЗакрытия.ДополнительныеХарактеристикиНоменклатуры; 
			
		КонецЕсли; 
		
		Модифицированность = Истина; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяТекущейКолонкиТабличнойЧасти()
	
	Если ТекущийЭлемент.Имя <> "Товары" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяТабличнойЧасти =  ТекущийЭлемент.Имя;
	ИмяТабличнойЧастиИКолонки = Элементы.Товары.ТекущийЭлемент.Имя;   
	ИмяКолонки = СтрЗаменить(ИмяТабличнойЧастиИКолонки, ИмяТабличнойЧасти,"");
	
	Возврат ИмяКолонки;

КонецФункции

&НаКлиенте
Процедура ЗагрузитьСписокНоменклатурыИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнителныеПараметры)Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьСписокНоменклатурыИзФайлаНаСервере(АдресЗагруженныхДанных);

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСписокНоменклатурыИзФайлаНаСервере(АдресЗагружунныхДанных)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагружунныхДанных);
	ПорядковыйНомер = ДокументыСервер.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер");
	
	Для Каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		СтрокаТаблицыТовары = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыТовары, СтрокаТаблицы);
		СтрокаТаблицыТовары.ПорядковыйНомер = ПорядковыйНомер;    
		
		ПорядковыйНомер = ПорядковыйНомер + 1; 
		
	КонецЦикла;
	
КонецПроцедуры 

#КонецОбласти

