#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Список.ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
	|	ВнутреннийЗаказТовары.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
	|	ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа,
	|	ВнутреннийЗаказТовары.Количество КАК Количество,
	|	ВнутреннийЗаказТовары.Ссылка КАК ВнутреннийЗаказ
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	|ГДЕ
	|	ВнутреннийЗаказТовары.Ссылка.Проведен
	|	И ВнутреннийЗаказТовары.Ссылка.РабочаяДокументация.БазовыйДокумент = &БазовыйДокумент
	|	И ВнутреннийЗаказТовары.Ссылка.РабочаяДокументация.РазделПроекта = &РазделПроекта
	|	И ВнутреннийЗаказТовары.Ссылка <> &Ссылка
	|	И ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа = &ЕдиницаИзмеренияЗаказа
	|	И ВнутреннийЗаказТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутреннийЗаказТовары.Номенклатура,
	|	ВнутреннийЗаказТовары.ДополнительныеХарактеристикиНоменклатуры,
	|	ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа,
	|	ВнутреннийЗаказТовары.Количество,
	|	ВнутреннийЗаказТовары.ЗаказДляКорректировки
	|ИЗ
	|	Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
	|ГДЕ
	|	ВнутреннийЗаказТовары.Ссылка <> &Ссылка
	|	И ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа = &ЕдиницаИзмеренияЗаказа
	|	И ВнутреннийЗаказТовары.Количество < 0
	|	И ВнутреннийЗаказТовары.Ссылка.РабочаяДокументация.БазовыйДокумент = &БазовыйДокумент
	|	И ВнутреннийЗаказТовары.Ссылка.РабочаяДокументация.РазделПроекта = &РазделПроекта
	|	И ВнутреннийЗаказТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.Номенклатура КАК Номенклатура,
	|	ВТТовары.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
	|	ВТТовары.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа,
	|	СУММА(ВТТовары.Количество) КАК Количество,
	|	ВТТовары.ВнутреннийЗаказ КАК ВнутреннийЗаказ
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТовары.Номенклатура,
	|	ВТТовары.ЕдиницаИзмеренияЗаказа,
	|	ВТТовары.ВнутреннийЗаказ,
	|	ВТТовары.ДополнительныеХарактеристикиНоменклатуры";
	
	
	
	УстановитьПараметрыЗапросаИЗначенияРеквизитовФормы(); 
	
	УстановитьДополнительныйТекстИДополнительныеПараметрыЗапроса();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры   

#КонецОбласти  


#Область ОбработчикиСобытийЭлементовТаблицыФормы 

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные; 
	СтандартнаяОбработка = Ложь; 
	
	Если ТекущиеДанные.Количество < -КоличествоКСокращению Тогда
		
		ТекстСообщения = "Ошибка. Количество выбранного элемента  меньше, чем количество к сокращению."; 
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВнутреннийЗаказ", ТекущиеДанные.ВнутреннийЗаказ);
	
	Если ТекущиеДанные.Номенклатура <> НоменклатураКСокращению 
		ИЛИ ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры <> ДополнительныеХарактеристикиНоменклатуры Тогда
		
		ПараметрыФормы.Вставить("Номенклатура",ТекущиеДанные.Номенклатура);
		ПараметрыФормы.Вставить("ДополнительныеХарактеристикиНоменклатуры",ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры);
		
		Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаНаЗаменуНоменклатуры", ЭтотОбъект, ПараметрыФормы);
		ТекстВопроса =	СтрШаблон("Выбранная Вами номенклатура отличается от номенклатуры в заявке. 
		|Произвести замену ? 
		|
		|%1 
		|%2
		|
		|на
		|
		|%3 
		|%4?",НоменклатураКСокращению, ДополнительныеХарактеристикиНоменклатуры, ТекущиеДанные.Номенклатура, ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры );;
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);  
	Иначе
		
		Закрыть(ПараметрыФормы);
		
	КонецЕсли;
	
	
	
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрыЗапросаИЗначенияРеквизитовФормы()
	
	Если Параметры.Свойство("РабочаяДокументация") Тогда
		
		ТекущаяРабочаяДокументация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.РабочаяДокументация,"Наименование");
		
		БазовыйДокументРазделПроекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.РабочаяДокументация,"БазовыйДокумент, РазделПроекта"); 
		Список.Параметры.УстановитьЗначениеПараметра("БазовыйДокумент", БазовыйДокументРазделПроекта.БазовыйДокумент);
		Список.Параметры.УстановитьЗначениеПараметра("РазделПроекта", БазовыйДокументРазделПроекта.РазделПроекта);
		
	КонецЕсли;
	
	Если Параметры.Свойство("ВнутреннийЗаказ") Тогда 
		
		Список.Параметры.УстановитьЗначениеПараметра("Ссылка", Параметры.ВнутреннийЗаказ);
		
	КонецЕсли;
	
	Если  Параметры.Свойство("ЕдиницаИзмеренияЗаказа") Тогда 
		
		Список.Параметры.УстановитьЗначениеПараметра("ЕдиницаИзмеренияЗаказа",Параметры.ЕдиницаИзмеренияЗаказа); 
		ЕдиницаИзмерения  =  Параметры.ЕдиницаИзмеренияЗаказа;
		
	КонецЕсли;    
	
	Если Параметры.Свойство("Номенклатура") Тогда
		
		НоменклатураКСокращению = Параметры.Номенклатура;
		
	КонецЕсли;
	
	Если Параметры.Свойство("Количество") Тогда
		
		КоличествоКСокращению = Параметры.Количество;
		
	КонецЕсли;  
	
	Если Параметры.Свойство("ДополнительныеХарактеристикиНоменклатуры") Тогда
		
		ДополнительныеХарактеристикиНоменклатуры = Параметры.ДополнительныеХарактеристикиНоменклатуры;
		
	КонецЕсли;  
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДополнительныйТекстИДополнительныеПараметрыЗапроса()    
	
	Если  Не (Параметры.Свойство("АдресВоВременномХранилище") И ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище)) Тогда 
		Возврат;
	КонецЕсли; 
	
	ТабличнаяЧастьТовары = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
	|	Товары.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа,
	|	Товары.Количество КАК Количество,
	|	Товары.ЗаказДляКорректировки КАК ЗаказДляКорректировки
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.ЗаказДляКорректировки <> ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмеренияЗаказа = &ЕдиницаИзмеренияЗаказа
	|	И Товары.Количество < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.Номенклатура КАК Номенклатура,
	|	ВТТовары.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
	|	ВТТовары.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа,
	|	ВТТовары.Количество КАК Количество,
	|	ВТТовары.ЗаказДляКорректировки КАК ЗаказДляКорректировки
	|ИЗ
	|	ВТТовары КАК ВТТовары";
	
	Запрос.УстановитьПараметр("Товары",ТабличнаяЧастьТовары); 
	Если  Параметры.Свойство("ЕдиницаИзмеренияЗаказа") Тогда 
		
		Запрос.УстановитьПараметр("ЕдиницаИзмеренияЗаказа",Параметры.ЕдиницаИзмеренияЗаказа); 
		
	КонецЕсли; 
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;	
	КонецЕсли;
	
	
	Товары =  Результат.Выгрузить();
	
	ДополнительныйТекстЗапроса = "";  
	
	Индекс = 1;  
	
	Для Каждого Товар Из Товары Цикл
		
		ДополнительныйТекстЗапроса = СтрШаблон("%1 
		|ОБЪЕДИНИТЬ ВСЕ 
		|ВЫБРАТЬ 
		|&Номенклатура%2,
		|&ДополнительныеХарактеристикиНоменклатуры%2,
		|&ЕдиницаИзмеренияЗаказа%2, 
		|&Количество%2, 
		|&ЗаказДляКорректировки%2",ДополнительныйТекстЗапроса,Формат(Индекс,"ЧДЦ=0; ЧГ="));
		
		Индекс = Индекс + 1;
		
	КонецЦикла;  
	
	Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса,";",ДополнительныйТекстЗапроса + ";");
	
	//Усановить дополнительный параметры запроса
	Индекс = 1;
	Для Каждого Товар Из Товары Цикл
		
		Список.Параметры.УстановитьЗначениеПараметра("Номенклатура" + Формат(Индекс,"ЧДЦ=0; ЧГ="),Товар.Номенклатура); 
		Список.Параметры.УстановитьЗначениеПараметра("ДополнительныеХарактеристикиНоменклатуры" + Формат(Индекс,"ЧДЦ=0; ЧГ="),Товар.ДополнительныеХарактеристикиНоменклатуры); 
		Список.Параметры.УстановитьЗначениеПараметра("ЕдиницаИзмеренияЗаказа" + Формат(Индекс,"ЧДЦ=0; ЧГ="),Товар.ЕдиницаИзмеренияЗаказа);
		Список.Параметры.УстановитьЗначениеПараметра("ЗаказДляКорректировки" + Формат(Индекс,"ЧДЦ=0; ЧГ="),Товар.ЗаказДляКорректировки);
		Список.Параметры.УстановитьЗначениеПараметра("Количество" + Формат(Индекс,"ЧДЦ=0; ЧГ="),Товар.Количество);
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление() 
	
	// Условное оформление динамического списка "Список"
	
	// Строка у которой совпадает только номенклатура выделить полужирным
	СписокУсловноеОформление = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();    
	
	ЭлементСовпадениеПоНоменклатуре = СписокУсловноеОформление.Элементы.Добавить(); 
	
	ОтборЭлементаСовпадениеПоНоменклатуре = ЭлементСовпадениеПоНоменклатуре.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлементаСовпадениеПоНоменклатуре.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
	ОтборЭлементаСовпадениеПоНоменклатуре.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлементаСовпадениеПоНоменклатуре.ПравоеЗначение = НоменклатураКСокращению;
	ЭлементСовпадениеПоНоменклатуре.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(,,Истина));  
	
	
	// Строка у которой совпадает и номенклатура и дополниетльные характеристики выделить полужирным и окрасить в зеленый цвет.
	
	ЭлементСовпадениеПоНоменклатуреИХарактеристике = СписокУсловноеОформление.Элементы.Добавить();
	
	ОтборНоменклатуры = ЭлементСовпадениеПоНоменклатуреИХарактеристике.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборНоменклатуры.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура");
	ОтборНоменклатуры.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборНоменклатуры.ПравоеЗначение = НоменклатураКСокращению;
	
	ОтборХарактеристик = ЭлементСовпадениеПоНоменклатуреИХарактеристике.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборХарактеристик.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДополнительныеХарактеристикиНоменклатуры");
	ОтборХарактеристик.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборХарактеристик.ПравоеЗначение = ДополнительныеХарактеристикиНоменклатуры;
	
	ЭлементСовпадениеПоНоменклатуреИХарактеристике.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветАкцента);
	//ЭлементСовпадениеПоНоменклатуреИХарактеристике.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(,,Истина)); 
	
	
	//Позиции с меньшим количеством, чем требуется сократить, окрасить в красный цвет. И если совпадает номенклатура дополнительно выделить полужирным. 	
	Элемент = СписокУсловноеОформление.Элементы.Добавить();                                                           
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Количество");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = - КоличествоКСокращению;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаЗаменуНоменклатуры(Знач РезультатВопроса, Знач ДополнительныеПараметры) Экспорт  
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда 
		
		Закрыть(ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти