#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

	Префикс = "ПН-"; 
	
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() И ДанныеЗаполнения = Неопределено Тогда
		ЗаполнитьПоЗначениямАвтозаполнения(ДанныеЗаполнения)
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетКонтрагента") Тогда
				
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКонтрагентаТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	СчетКонтрагентаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмеренияПоставщика,
		|	МАКСИМУМ(СчетКонтрагентаТовары.Цена) КАК Цена
		|ПОМЕСТИТЬ ВТ_ТоварыСЦеной
		|ИЗ
		|	Документ.СчетКонтрагента.Товары КАК СчетКонтрагентаТовары
		|ГДЕ
		|	СчетКонтрагентаТовары.Ссылка = &СчетКонтрагента
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаТовары.НоменклатураПоставщика,
		|	СчетКонтрагентаТовары.ЕдиницаИзмерения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетКонтрагентаЗакрытыеПотребности.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	СчетКонтрагентаЗакрытыеПотребности.Номенклатура КАК Номенклатура,
		|	СчетКонтрагентаЗакрытыеПотребности.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	СчетКонтрагентаЗакрытыеПотребности.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.КоэффициентЕдиницыИзмерения КАК КоэффициентЕдиницыИзмерения,
		|	СчетКонтрагентаЗакрытыеПотребности.ПредставлениеПересчетаЕдиницИзмерения КАК ПредставлениеПересчетаЕдиницИзмерения,
		|	СчетКонтрагентаЗакрытыеПотребности.РазрешитьСверхобъем КАК РазрешитьСверхобъем,
		|	СчетКонтрагентаЗакрытыеПотребности.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
		|ПОМЕСТИТЬ ВТ_НаименованияТоваров
		|ИЗ
		|	Документ.СчетКонтрагента.ЗакрытыеПотребности КАК СчетКонтрагентаЗакрытыеПотребности
		|ГДЕ
		|	СчетКонтрагентаЗакрытыеПотребности.Ссылка = &СчетКонтрагента
		|	И СчетКонтрагентаЗакрытыеПотребности.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НаименованияТоваров.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	ВТ_НаименованияТоваров.Номенклатура КАК Номенклатура,
		|	ВТ_НаименованияТоваров.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	ВТ_НаименованияТоваров.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	ВТ_НаименованияТоваров.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ВТ_НаименованияТоваров.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	ВТ_НаименованияТоваров.КоэффициентЕдиницыИзмерения КАК КоэффициентЕдиницыИзмерения,
		|	ВТ_НаименованияТоваров.ПредставлениеПересчетаЕдиницИзмерения КАК ПредставлениеПересчетаЕдиницИзмерения,
		|	ВТ_НаименованияТоваров.РазрешитьСверхобъем КАК РазрешитьСверхобъем,
		|	ВТ_НаименованияТоваров.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
		|	ЕСТЬNULL(ВТ_ТоварыСЦеной.Цена, 0) КАК Цена,
		|	ЕСТЬNULL(ОстатокТовараПоСчетуОстатки.КоличествоЗакрытоеПоСчетуОстаток, 0) КАК ОстатокПоСчету,
		|	ЕСТЬNULL(ОстатокТовараПоСчетуОстатки.КоличествоЗакрытоеПотребностиОстаток, 0) КАК ОстатокПотребности
		|ПОМЕСТИТЬ ВТ_ПолныеДанные
		|ИЗ
		|	ВТ_НаименованияТоваров КАК ВТ_НаименованияТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстатокТовараПоСчету.Остатки(, СчетКонтрагента = &СчетКонтрагента) КАК ОстатокТовараПоСчетуОстатки
		|		ПО ВТ_НаименованияТоваров.ВнутреннийЗаказ = ОстатокТовараПоСчетуОстатки.ВнутреннийЗаказ
		|			И ВТ_НаименованияТоваров.Номенклатура = ОстатокТовараПоСчетуОстатки.Номенклатура
		|			И ВТ_НаименованияТоваров.ДополнительныеХарактеристикиНоменклатуры = ОстатокТовараПоСчетуОстатки.ДополнительныеХарактеристикиНоменклатуры
		|			И ВТ_НаименованияТоваров.ЕдиницаИзмеренияПотребности = ОстатокТовараПоСчетуОстатки.ЕдиницаИзмерения
		|			И ВТ_НаименованияТоваров.НоменклатураПоставщика = ОстатокТовараПоСчетуОстатки.НоменклатураПоставщика
		|			И ВТ_НаименованияТоваров.ЕдиницаИзмеренияПоставщика = ОстатокТовараПоСчетуОстатки.ЕдиницаИзмеренияПоставщика
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыСЦеной КАК ВТ_ТоварыСЦеной
		|		ПО ВТ_НаименованияТоваров.НоменклатураПоставщика = ВТ_ТоварыСЦеной.НоменклатураПоставщика
		|			И ВТ_НаименованияТоваров.ЕдиницаИзмеренияПоставщика = ВТ_ТоварыСЦеной.ЕдиницаИзмеренияПоставщика
		|ГДЕ
		|	ОстатокТовараПоСчетуОстатки.КоличествоЗакрытоеПоСчетуОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПолныеДанные.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ВТ_ПолныеДанные.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмерения,
		|	МАКСИМУМ(ВТ_ПолныеДанные.Цена) КАК Цена,
		|	СУММА(ВТ_ПолныеДанные.ОстатокПоСчету) КАК Количество
		|ИЗ
		|	ВТ_ПолныеДанные КАК ВТ_ПолныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПолныеДанные.НоменклатураПоставщика,
		|	ВТ_ПолныеДанные.ЕдиницаИзмеренияПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПолныеДанные.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	ВТ_ПолныеДанные.Номенклатура КАК Номенклатура,
		|	ВТ_ПолныеДанные.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	ВТ_ПолныеДанные.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	ВТ_ПолныеДанные.ОстатокПотребности КАК КоличествоЗакрытоеПотребности,
		|	ВТ_ПолныеДанные.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ВТ_ПолныеДанные.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	ВТ_ПолныеДанные.ОстатокПоСчету КАК КоличествоЗакрытоеПоНакладной,
		|	ВТ_ПолныеДанные.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
		|	ВТ_ПолныеДанные.КоэффициентЕдиницыИзмерения КАК КоэффициентЕдиницыИзмерения,
		|	ВТ_ПолныеДанные.ПредставлениеПересчетаЕдиницИзмерения КАК ПредставлениеПересчетаЕдиницИзмерения,
		|	ВТ_ПолныеДанные.РазрешитьСверхобъем КАК РазрешитьСверхобъем
		|ИЗ
		|	ВТ_ПолныеДанные КАК ВТ_ПолныеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетКонтрагента.Валюта КАК Валюта,
		|	СчетКонтрагента.Договор КАК Договор,
		|	СчетКонтрагента.Контрагент КАК Контрагент,
		|	СчетКонтрагента.Организация КАК Организация,
		|	СчетКонтрагента.Ответственный КАК Ответственный,
		|	СчетКонтрагента.Склад КАК Склад,
		|	СчетКонтрагента.Ссылка КАК Основание,
		|	СчетКонтрагента.СтавкаНДС КАК СтавкаНДС,
		|	СчетКонтрагента.ЦенаВключаетНДС КАК ЦенаВключаетНДС
		|ИЗ
		|	Документ.СчетКонтрагента КАК СчетКонтрагента
		|ГДЕ
		|	СчетКонтрагента.Ссылка = &СчетКонтрагента";
		
		Запрос.УстановитьПараметр("СчетКонтрагента", ДанныеЗаполнения);
			
		РезультатЗапроса = Запрос.ВыполнитьПакет();
				
		Если РезультатЗапроса[3].Пустой() Тогда
			
			ВызватьИсключение "Создать приходную накладную на основании данного счета невозможно!
								|По данному документу все материалы  поступили на склад!"; 
			
		КонецЕсли;
		
		// Заполнение табличных частей
		Товары.Загрузить(РезультатЗапроса[3].Выгрузить()); 
		ЗакрытыеПотребности.Загрузить(РезультатЗапроса[4].Выгрузить());
						
		// Заполнение шапки  
		ЗначенияРеквизтовШапки = РезультатЗапроса[5].Выбрать();
		ЗначенияРеквизтовШапки.Следующий();		
		Валюта = ЗначенияРеквизтовШапки.Валюта;
		Договор = ЗначенияРеквизтовШапки.Договор;
		Контрагент = ЗначенияРеквизтовШапки.Контрагент;
		Организация = ЗначенияРеквизтовШапки.Организация;
		Ответственный = ЗначенияРеквизтовШапки.Ответственный;
		Склад = ЗначенияРеквизтовШапки.Склад;
		Основание = ЗначенияРеквизтовШапки.Основание;
		СтавкаНДС = ЗначенияРеквизтовШапки.СтавкаНДС;
		ЦенаВключаетНДС = ЗначенияРеквизтовШапки.ЦенаВключаетНДС;
		Автор = КадрыСервер.ТекущийСотрудник();
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
		
	Если  Товары.Количество() = 0 Тогда
		
		Отказ = Истина;
		ТекстСообщения = "Документ не проведен.
						| В документе нет ни одной позициии материала.";   
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
		Возврат;
		
	КонецЕсли;

	Если Не ДанныеПровереныИГотовыКЗаписи() Тогда
		
		Отказ = Истина;
		
		ТекстСообщения = "Ошибка. Документ не проведен.
		| Некоторые позиции в приходной накладной не полностью распределены по заявкам.";   
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
		
	КонецЕсли;
	
 
	Движения.ОстатокПотребностиПоВнутреннимЗаказам.Записывать = Истина;	
	Движения.ОстаткиНаСкладах.Записывать = Истина;
	
	Движения.Записать(); 
		
	Если ЗначениеЗаполнено(Основание) Тогда 
		
		// Работа с регистром ОстатокТовараПоСчету
		Движения.ОстатокТовараПоСчету.Записывать = Истина; 
		Движения.Записать(); 	
		Движения.ОстатокТовараПоСчету.Записывать = Истина; 
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстатокТовараПоСчету");
		ЭлементБлокировки.УстановитьЗначение("СчетКонтрагента", Основание);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ЗакрытыеПотребности;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВнутреннийЗаказ", "ВнутреннийЗаказ");  
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ДополнительныеХарактеристикиНоменклатуры", "ДополнительныеХарактеристикиНоменклатуры");  
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЕдиницаИзмерения", "ЕдиницаИзмеренияПотребности");   
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("НоменклатураПоставщика", "НоменклатураПоставщика");  
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЕдиницаИзмеренияПоставщика", "ЕдиницаИзмеренияПоставщика");  
		
		Блокировка.Заблокировать();
		
	КонецЕсли; 
	
	
	Движения.ОстатокПотребностиПоВнутреннимЗаказам.Записывать = Истина;
	Движения.ОстаткиНаСкладах.Записывать = Истина;

	
  	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Номенклатура КАК Номенклатура,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	СУММА(ЕСТЬNULL(ПриходнаяНакладнаяЗакрытыеПотребности.КоличествоЗакрытоеПотребности, 0)) КАК КоличествоЗакрытоеПотребности,
		|	СУММА(ЕСТЬNULL(ПриходнаяНакладнаяЗакрытыеПотребности.КоличествоЗакрытоеПоНакладной, 0)) КАК КоличествоЗакрытоеПоНакладной,
		|	МИНИМУМ(ПриходнаяНакладнаяТовары.НомерСтроки) КАК НомерСтроки,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Ссылка.Основание КАК Основание
		|ПОМЕСТИТЬ ВТ_ТекущиеДанные
		|ИЗ
		|	Документ.ПриходнаяНакладная.ЗакрытыеПотребности КАК ПриходнаяНакладнаяЗакрытыеПотребности
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Товары КАК ПриходнаяНакладнаяТовары
		|		ПО ПриходнаяНакладнаяЗакрытыеПотребности.НоменклатураПоставщика = ПриходнаяНакладнаяТовары.НоменклатураПоставщика
		|			И ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика = ПриходнаяНакладнаяТовары.ЕдиницаИзмерения
		|ГДЕ
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Ссылка = &Ссылка
		|	И ПриходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ДополнительныеХарактеристикиНоменклатуры,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ВнутреннийЗаказ,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.НоменклатураПоставщика,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПотребности,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Номенклатура,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Ссылка.Основание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТекущиеДанные.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	ВТ_ТекущиеДанные.Номенклатура КАК Номенклатура,
		|	ВТ_ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	ВТ_ТекущиеДанные.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	ВТ_ТекущиеДанные.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ВТ_ТекущиеДанные.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	ЕСТЬNULL(ВТ_ТекущиеДанные.КоличествоЗакрытоеПотребности, 0) КАК КоличествоЗакрытоеПотребности,
		|	ЕСТЬNULL(ВТ_ТекущиеДанные.КоличествоЗакрытоеПоНакладной, 0) КАК КоличествоЗакрытоеПоНакладной,
		|	ВТ_ТекущиеДанные.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОстатокТовараПоСчетуОстатки.КоличествоЗакрытоеПоСчетуОстаток, 0) КАК КоличествоЗакрытоеПоСчетуОстаток,
		|	ЕСТЬNULL(ОстатокТовараПоСчетуОстатки.КоличествоЗакрытоеПотребностиОстаток, 0) КАК КоличествоЗакрытоеПотребностиОстаток,
		|	ПРЕДСТАВЛЕНИЕ(ВТ_ТекущиеДанные.НоменклатураПоставщика) КАК НоменклатураПоставщикаПредставление
		|ИЗ
		|	ВТ_ТекущиеДанные КАК ВТ_ТекущиеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстатокТовараПоСчету.Остатки(
		|				&Период,
		|				(ВнутреннийЗаказ, ДополнительныеХарактеристикиНоменклатуры, ЕдиницаИзмерения, ЕдиницаИзмеренияПоставщика, Номенклатура, НоменклатураПоставщика, СчетКонтрагента) В
		|					(ВЫБРАТЬ
		|						ВТ_ТекущиеДанные.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|						ВТ_ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|						ВТ_ТекущиеДанные.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|						ВТ_ТекущиеДанные.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|						ВТ_ТекущиеДанные.Номенклатура КАК Номенклатура,
		|						ВТ_ТекущиеДанные.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|						ВТ_ТекущиеДанные.Основание КАК Основание
		|					ИЗ
		|						ВТ_ТекущиеДанные КАК ВТ_ТекущиеДанные)) КАК ОстатокТовараПоСчетуОстатки
		|		ПО ВТ_ТекущиеДанные.ВнутреннийЗаказ = ОстатокТовараПоСчетуОстатки.ВнутреннийЗаказ
		|			И ВТ_ТекущиеДанные.Номенклатура = ОстатокТовараПоСчетуОстатки.Номенклатура
		|			И ВТ_ТекущиеДанные.ДополнительныеХарактеристикиНоменклатуры = ОстатокТовараПоСчетуОстатки.ДополнительныеХарактеристикиНоменклатуры
		|			И ВТ_ТекущиеДанные.ЕдиницаИзмеренияПотребности = ОстатокТовараПоСчетуОстатки.ЕдиницаИзмерения
		|			И ВТ_ТекущиеДанные.Основание = ОстатокТовараПоСчетуОстатки.СчетКонтрагента
		|			И ВТ_ТекущиеДанные.НоменклатураПоставщика = ОстатокТовараПоСчетуОстатки.НоменклатураПоставщика
		|			И ВТ_ТекущиеДанные.ЕдиницаИзмеренияПоставщика = ОстатокТовараПоСчетуОстатки.ЕдиницаИзмеренияПоставщика
		|ИТОГИ
		|	СУММА(КоличествоЗакрытоеПоНакладной),
		|	МИНИМУМ(НомерСтроки),
		|	СУММА(КоличествоЗакрытоеПоСчетуОстаток)
		|ПО
		|	НоменклатураПоставщика,
		|	ЕдиницаИзмеренияПоставщика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", МоментВремени());

	
	ВыборкаНаименование = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНаименование.Следующий() Цикл
		
		ВыборкаИтоги = ВыборкаНаименование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаИтоги.Следующий() Цикл
				
			Если ЗначениеЗаполнено(Основание) И ВыборкаИтоги.КоличествоЗакрытоеПоНакладной > ВыборкаИтоги.КоличествоЗакрытоеПоСчетуОстаток Тогда
				
				ТекстСообщения = СтрШаблон("Ошибка. Попытка заприходовать номенклатуру ""%1"" в большем количестве, чем дозволено.
				|Количество к приходу %2, остаток по счету %3", 
				ВыборкаИтоги.НоменклатураПоставщикаПредставление, 
				ВыборкаИтоги.КоличествоЗакрытоеПоНакладной, 
				ВыборкаИтоги.КоличествоЗакрытоеПоСчетуОстаток);
				
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,"Товары[" + XMLСтрока(ВыборкаИтоги.НомерСтроки - 1) + "].Количество",,Отказ);
				Продолжить;
				
			КонецЕсли; 
			
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			
			ВыборкаДетальныеЗаписи = ВыборкаИтоги.Выбрать();	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
				
				Если ЗначениеЗаполнено(Основание) И ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоНакладной > ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоСчетуОстаток Тогда
					
					ТекстСообщения = СтрШаблон("Ошибка. Нарушены связи распределения номенклатуры  ""%1""  по заявкам.", 
					ВыборкаДетальныеЗаписи.НоменклатураПоставщикаПредставление); 
					
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,ЭтотОбъект,"Товары[" + XMLСтрока(ВыборкаДетальныеЗаписи.НомерСтроки - 1) + "].Количество",,Отказ);
					Продолжить;
					
				КонецЕсли; 

				
				КСписаниюКоличествоЗакрытоеПотребности = Окр(ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПотребности,3);
				Если ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоНакладной = ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоСчетуОстаток Тогда
					
					КСписаниюКоличествоЗакрытоеПотребности = ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПотребностиОстаток;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Основание) Тогда
										
					//Расход по регистру ОстатокТовараПоСчету	
					Движение = Движения.ОстатокТовараПоСчету.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = ДатаТоварнойНакладной;
					Движение.ВнутреннийЗаказ = ВыборкаДетальныеЗаписи.ВнутреннийЗаказ;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.ДополнительныеХарактеристикиНоменклатуры = ВыборкаДетальныеЗаписи.ДополнительныеХарактеристикиНоменклатуры;
					Движение.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияПотребности;
					Движение.СчетКонтрагента = Основание;
					Движение.НоменклатураПоставщика = ВыборкаДетальныеЗаписи.НоменклатураПоставщика;
					Движение.ЕдиницаИзмеренияПоставщика = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияПоставщика;
					Движение.КоличествоЗакрытоеПоСчету = ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоНакладной; 
					
					
					Движение.КоличествоЗакрытоеПотребности = КСписаниюКоличествоЗакрытоеПотребности; 
					
				КонецЕсли;
				
				//Расход по регистру ОстатокПотребностиПоВнутреннимЗаказам  	
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВнутреннийЗаказ) Тогда
					Движение = Движения.ОстатокПотребностиПоВнутреннимЗаказам.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = ДатаТоварнойНакладной;
					
					Движение.ВнутреннийЗаказ = ВыборкаДетальныеЗаписи.ВнутреннийЗаказ;
					Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
					Движение.ДополнительныеХарактеристикиНоменклатуры = ВыборкаДетальныеЗаписи.ДополнительныеХарактеристикиНоменклатуры;
					Движение.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияПотребности;
					Движение.Количество = КСписаниюКоличествоЗакрытоеПотребности;
				КонецЕсли;  
				
				// Приход по регистру ОстаткиНаСкладах
				Движение = Движения.ОстаткиНаСкладах.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = ДатаТоварнойНакладной;
				Движение.Склад = Склад;  
				Движение.НоменклатураПоставщика = ВыборкаДетальныеЗаписи.НоменклатураПоставщика;				
				Движение.ЕдиницаИзмеренияПоставщика = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияПоставщика;
                Движение.Партия = Ссылка;

				Движение.ВнутреннийЗаказ = ВыборкаДетальныеЗаписи.ВнутреннийЗаказ;
				
				Движение.ДополнительныеХарактеристикиНоменклатуры = ВыборкаДетальныеЗаписи.ДополнительныеХарактеристикиНоменклатуры;
				Движение.ЕдиницаИзмеренияВнутреннегоЗаказа = ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияПотребности;
				Движение.НоменклатураВнутреннегоЗаказа = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоЗакрытоеПоНакладной; 
				Движение.КоличествоВнутреннегоЗаказа = КСписаниюКоличествоЗакрытоеПотребности; 
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоЗначениямАвтозаполнения(ДанныеАвтоЗаполнения) 
	//Создает структуру с данными для заполнения реквизитов по умолчанию нового документа

	ДанныеАвтоЗаполнения = Новый Структура ();
	ДанныеАвтоЗаполнения.Вставить("Организация", ОрганизацииСерверУЗ.ОганизацияПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("Валюта", ДокументыСервер.ВалютаПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("Ответственный", КадрыСервер.ТекущийСотрудник());
	ДанныеАвтоЗаполнения.Вставить("ЦенаВключаетНДС", Истина);
	ДанныеАвтоЗаполнения.Вставить("Склад", ДокументыСервер.СкладПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("СтавкаНДС", Перечисления.СтавкаНДС.НДС20);
	ДанныеАвтоЗаполнения.Вставить("Автор",КадрыСервер.ТекущийСотрудник()); 	
		
КонецПроцедуры

Функция ДанныеПровереныИГотовыКЗаписи()

	ДанныеГотовы = Истина;
	
	// Проверка на полное распределение товаров по счету.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходнаяНакладнаяТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ПриходнаяНакладнаяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ЕСТЬNULL(ПриходнаяНакладнаяТовары.Количество, 0)) КАК Количество
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.ПриходнаяНакладная.Товары КАК ПриходнаяНакладнаяТовары
		|ГДЕ
		|	ПриходнаяНакладнаяТовары.Ссылка = &ПриходнаяНакладная
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяТовары.НоменклатураПоставщика,
		|	ПриходнаяНакладнаяТовары.ЕдиницаИзмерения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходнаяНакладнаяЗакрытыеПотребности.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	СУММА(ЕСТЬNULL(ПриходнаяНакладнаяЗакрытыеПотребности.КоличествоЗакрытоеПоНакладной, 0)) КАК КоличествоЗакрытоеПоНакладной
		|ПОМЕСТИТЬ ВТ_ЗакрытаяПотребность
		|ИЗ
		|	Документ.ПриходнаяНакладная.ЗакрытыеПотребности КАК ПриходнаяНакладнаяЗакрытыеПотребности
		|ГДЕ
		|	ПриходнаяНакладнаяЗакрытыеПотребности.Ссылка = &ПриходнаяНакладная
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходнаяНакладнаяЗакрытыеПотребности.НоменклатураПоставщика,
		|	ПриходнаяНакладнаяЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_Товары.Количество, 0) - ЕСТЬNULL(ВТ_ЗакрытаяПотребность.КоличествоЗакрытоеПоНакладной, 0) КАК ОсталосьРаспределить
		|ПОМЕСТИТЬ ВТ_ОсталосьРаспределить
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗакрытаяПотребность КАК ВТ_ЗакрытаяПотребность
		|		ПО ВТ_Товары.НоменклатураПоставщика = ВТ_ЗакрытаяПотребность.НоменклатураПоставщика
		|			И ВТ_Товары.ЕдиницаИзмерения = ВТ_ЗакрытаяПотребность.ЕдиницаИзмеренияПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОсталосьРаспределить.ОсталосьРаспределить КАК ОсталосьРаспределить
		|ИЗ
		|	ВТ_ОсталосьРаспределить КАК ВТ_ОсталосьРаспределить
		|ГДЕ
		|	ВТ_ОсталосьРаспределить.ОсталосьРаспределить <> 0";
	
	Запрос.УстановитьПараметр("ПриходнаяНакладная", Ссылка);
	
	Если Не Запрос.Выполнить().Пустой() Тогда	
		ДанныеГотовы = Ложь;
	КонецЕсли;
				
	Возврат ДанныеГотовы;
	
КонецФункции

#КонецОбласти


