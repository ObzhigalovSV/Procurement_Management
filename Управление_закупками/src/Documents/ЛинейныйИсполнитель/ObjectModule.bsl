#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		// Заполнение шапки
		Основание = ДанныеЗаполнения.Ссылка;
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ВидПоставки") = Перечисления.ВидПоставки.Заказчиком Тогда
			
			ЗакупщикМатериала = Константы.ЗаказчикПоУмолчанию.Получить();	
			
		КонецЕсли;
		
		
	КонецЕсли;  
	
КонецПроцедуры 


Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ЛинейныйИсполнительВнутреннегоЗаказа
	Движения.ЛинейныйИсполнительВнутреннегоЗаказа.Записывать = Истина;
	Движение = Движения.ЛинейныйИсполнительВнутреннегоЗаказа.Добавить();
	Движение.ВнутреннийЗаказ = Основание;
	Движение.ЛинейныйИсполнитель = ИсполнительРабот;

	// регистр ЗакупщикМатериаловВнутреннегоЗаказа
	Движения.ЗакупщикМатериаловВнутреннегоЗаказа.Записывать = Истина;
	Движение = Движения.ЗакупщикМатериаловВнутреннегоЗаказа.Добавить();
	Движение.ВнутреннийЗаказ = Основание;
	Движение.ЗакупщикМатериалов = ЗакупщикМатериала;     
	
	// регистр ОстатокПотребностиПоВнутреннимЗаказам
	ЗаписатьДвиженияВРегистрОстатокПотребностиПоВнутреннимЗаказам(Отказ);
	
КонецПроцедуры


#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьДвиженияВРегистрОстатокПотребностиПоВнутреннимЗаказам(Отказ)
	
	// Если поставка за заказчиком или за организацией движения проводить не надо.
	Движения.ОстатокПотребностиПоВнутреннимЗаказам.Записывать = Истина;  
	
	ВидПоставки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "ВидПоставки");
	Если ЗначениеЗаполнено(ЗакупщикМатериала)
		 И Не ВидПоставки = Перечисления.ВидПоставки.Заказчиком 
		 И ТипЗнч(ЗакупщикМатериала) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутреннийЗаказТовары.Номенклатура КАК Номенклатура,
		|	ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа КАК ЕдиницаИзмеренияЗаказа,
		|	СУММА(ВнутреннийЗаказТовары.Количество) КАК Количество,
		|	ВнутреннийЗаказТовары.ЗаказДляКорректировки КАК ЗаказДляКорректировки,
		|	ЕСТЬNULL(ВнутреннийЗаказТовары.ДополнительныеХарактеристикиНоменклатуры, ЗНАЧЕНИЕ(Документ.ВнутреннийЗаказ.ПустаяСсылка)) КАК ДополнительныеХарактеристикиНоменклатуры
		|ИЗ
		|	Документ.ВнутреннийЗаказ.Товары КАК ВнутреннийЗаказТовары
		|ГДЕ
		|	ВнутреннийЗаказТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВнутреннийЗаказТовары.Номенклатура,
		|	ВнутреннийЗаказТовары.ЕдиницаИзмеренияЗаказа,
		|	ВнутреннийЗаказТовары.ЗаказДляКорректировки,
		|	ВнутреннийЗаказТовары.ДополнительныеХарактеристикиНоменклатуры";
		
		Запрос.УстановитьПараметр("Ссылка", Основание);
		РезультатЗапроса =  Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		//Результат не может быть пустой. Ранее была проверка на заполнение табличной части. 
		
		Движения.ОстатокПотребностиПоВнутреннимЗаказам.Записывать = Истина;
		
		Пока Выборка.Следующий() Цикл
			
			Движение = Движения.ОстатокПотребностиПоВнутреннимЗаказам.Добавить(); 
			
			Если Выборка.Количество >= 0 Тогда
				
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;			
				Движение.ВнутреннийЗаказ = Основание; 
				Движение.Количество = Выборка.Количество;
				
			Иначе      
				
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.ВнутреннийЗаказ = Выборка.ЗаказДляКорректировки;
				Движение.Количество = - Выборка.Количество;   
				
			КонецЕсли;
			
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.ДополнительныеХарактеристикиНоменклатуры = Выборка.ДополнительныеХарактеристикиНоменклатуры;
			Движение.ЕдиницаИзмерения = Выборка.ЕдиницаИзмеренияЗаказа;
			
		КонецЦикла;
		
		Движения.Записать();
		
		ТекстСообщения = СтрШаблон("Закупку материалов по заказу №%1 осуществляет %2.", 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Номер"),
		ЗакупщикМатериала);		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);  
	КонецЕсли;
	
	
КонецПроцедуры  

#КонецОбласти 