#Область ОбработчикиСобытийФормы      

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И Объект.Автор <> КадрыСервер.ТекущийСотрудник() Тогда
		ЭтотОбъект.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УстановитьЗаголовокФормы();	
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы  

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент) 
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры


#КонецОбласти
 
 
#Область ОбработчикиСобытийЭлементовТаблицыФормы   

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда   		
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;      
		ТекущиеДанные.ПорядковыйНомер = ДокументыКлиент.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер",1000);    

	КонецЕсли	
	
КонецПроцедуры  

&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.ПорядковыйНомер  = ДокументыКлиент.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер",1000);

		НоваяСтрока.Номенклатура = ВыбранноеЗначение; 

	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.ПорядковыйНомер  = ДокументыКлиент.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер",1000);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыбранноеЗначение); 
		
	КонецЕсли;
	
			
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы       

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);	
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормы,Элементы.Товары,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПервоначальныйПорядок(Команда)
	
	Объект.Товары.Сортировать("ПорядковыйНомер");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ПараметрыЗагрузки = ЗагрузкаДанныхИзФайлаКлиент.ПараметрыЗагрузкиДанных();
	ПараметрыЗагрузки.ПолноеИмяТабличнойЧасти = "РасширениеВнутреннегоЗаказа.Товары";
	ПараметрыЗагрузки.Заголовок = НСтр("ru='Загрузка списка номенклатуры из файла'");   
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьСписокНоменклатурыИзФайлаЗавершение", ЭтотОбъект);
	ЗагрузкаДанныхИзФайлаКлиент.ПоказатьФормуЗагрузки(ПараметрыЗагрузки,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыИзЗаказа(Команда)       
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);	
	ПараметрыФормы.Вставить("ВнутреннийЗаказ",Объект.Основание);
	
	ОткрытьФорму("Документ.ВнутреннийЗаказ.Форма.ФормаВыбораСтрокиИзЗаказа",ПараметрыФормы,Элементы.Товары,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьТабличнуюЧастьПоТекущейКолонкеПоВозрастанию(Команда)  
	
	ИмяСортируемойКолонки = ИмяТекущейКолонкиТабличнойЧасти();
	
	Если ИмяСортируемойКолонки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Сортировать(ИмяСортируемойКолонки);
	
КонецПроцедуры      

&НаКлиенте
Процедура СортироватьТабличнуюЧастьПоТекущейКолонкеПоУбыванию(Команда) 
	
	ИмяСортируемойКолонки = ИмяТекущейКолонкиТабличнойЧасти();
	
	Если ИмяСортируемойКолонки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Объект.Товары.Сортировать(ИмяСортируемойКолонки + " Убыв"); 
	
КонецПроцедуры


#КонецОбласти


#Область СлужебныеПроцедурыИФункции   

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Заголовок = "";
	АвтоЗаголовок = Истина;
	
	Если  ЗначениеЗаполнено(Объект.Основание) Тогда 
		
		АвтоЗаголовок = Ложь; 
		НомерИДата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Основание,"Номер, Дата");
		
		Заголовок = СтрШаблон("Расширение для внутреннего заказа %1 от %2 ", НомерИДата.Номер, НомерИДата.Дата);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Функция ИмяТекущейКолонкиТабличнойЧасти()
	
	Если ТекущийЭлемент.Имя <> "Товары" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяТабличнойЧасти =  ТекущийЭлемент.Имя;
	ИмяТабличнойЧастиИКолонки = Элементы.Товары.ТекущийЭлемент.Имя;   
	ИмяКолонки = СтрЗаменить(ИмяТабличнойЧастиИКолонки, ИмяТабличнойЧасти,"");
	
	Возврат ИмяКолонки;

КонецФункции

&НаКлиенте
Процедура ЗагрузитьСписокНоменклатурыИзФайлаЗавершение(АдресЗагруженныхДанных, ДополнителныеПараметры)Экспорт
	
	Если АдресЗагруженныхДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьСписокНоменклатурыИзФайлаНаСервере(АдресЗагруженныхДанных);

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСписокНоменклатурыИзФайлаНаСервере(АдресЗагружунныхДанных)
	
	ЗагруженныеДанные = ПолучитьИзВременногоХранилища(АдресЗагружунныхДанных);
	ПорядковыйНомер = ДокументыСервер.ПолучитьПорядковыйНомерНовогоЭлементаТабличнойЧасти(Объект,"Товары","ПорядковыйНомер",1000);

	Для Каждого СтрокаТаблицы Из ЗагруженныеДанные Цикл 
		
		СтрокаТаблицыТовары = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыТовары, СтрокаТаблицы);
		СтрокаТаблицыТовары.ПорядковыйНомер = ПорядковыйНомер;    
		
		ПорядковыйНомер = ПорядковыйНомер + 1; 
		
	КонецЦикла;
	
КонецПроцедуры 


#КонецОбласти

