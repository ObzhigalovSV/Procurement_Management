#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

	Префикс = "СК-"; 
	
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		
		Если ДанныеЗаполнения = Неопределено Тогда
			ЗаполнитьПоЗначениямАвтозаполнения(ДанныеЗаполнения)
		КонецЕсли;;

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Если  Товары.Количество() = 0 Тогда
		
		Отказ = Истина;
		ТекстСообщения = "Документ не проведен.
						| В документе нет ни одной позициии материала.";   
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);	
		Возврат;
		
	КонецЕсли;
			
	Если Не ДанныеПровереныИГотовыКЗаписи() Тогда
		
		Отказ = Истина;
		
		ТекстСообщения = "Ошибка. Документ не проведен.
				| Некоторые позиции в счете не полностью распределены по заявкам.";   
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
		
	КонецЕсли;
	
	Движения.ОстатокТовараПоСчету.Записывать = Истина;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКонтрагентаЗакрытыеПотребности.ВнутреннийЗаказ КАК ВнутреннийЗаказ,
		|	СчетКонтрагентаЗакрытыеПотребности.Номенклатура КАК Номенклатура,
		|	СчетКонтрагентаЗакрытыеПотребности.ДополнительныеХарактеристикиНоменклатуры КАК ДополнительныеХарактеристикиНоменклатуры,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПотребности КАК ЕдиницаИзмеренияПотребности,
		|	СчетКонтрагентаЗакрытыеПотребности.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	СУММА(СчетКонтрагентаЗакрытыеПотребности.КоличествоЗакрытоеПоСчету) КАК КоличествоЗакрытоеПоСчету,
		|	СУММА(СчетКонтрагентаЗакрытыеПотребности.КоличествоЗакрытоеПотребности) КАК КоличествоЗакрытоеПотребности
		|ИЗ
		|	Документ.СчетКонтрагента.ЗакрытыеПотребности КАК СчетКонтрагентаЗакрытыеПотребности
		|ГДЕ
		|	СчетКонтрагентаЗакрытыеПотребности.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаЗакрытыеПотребности.ВнутреннийЗаказ,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.ДополнительныеХарактеристикиНоменклатуры,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПотребности,
		|	СчетКонтрагентаЗакрытыеПотребности.НоменклатураПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл

		Движение = Движения.ОстатокТовараПоСчету.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = ДатаСчета;
		Движение.ВнутреннийЗаказ = Выборка.ВнутреннийЗаказ;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.ДополнительныеХарактеристикиНоменклатуры = Выборка.ДополнительныеХарактеристикиНоменклатуры;
		Движение.ЕдиницаИзмерения = Выборка.ЕдиницаИзмеренияПотребности;
		Движение.СчетКонтрагента = Ссылка;
		Движение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
		Движение.ЕдиницаИзмеренияПоставщика = Выборка.ЕдиницаИзмеренияПоставщика;
		Движение.КоличествоЗакрытоеПоСчету = Выборка.КоличествоЗакрытоеПоСчету;
		Движение.КоличествоЗакрытоеПотребности = Выборка.КоличествоЗакрытоеПотребности;
		
	КонецЦикла;    
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоЗначениямАвтозаполнения(ДанныеАвтоЗаполнения) 
	//Создает структуру с данными для заполнения реквизитов по умолчанию нового документа

	ДанныеАвтоЗаполнения = Новый Структура ();
	ДанныеАвтоЗаполнения.Вставить("Организация", ОрганизацииСерверУЗ.ОганизацияПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("Валюта", ДокументыСервер.ВалютаПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("Ответственный", КадрыСервер.ТекущийСотрудник());
	ДанныеАвтоЗаполнения.Вставить("ЦенаВключаетНДС", Истина);
	ДанныеАвтоЗаполнения.Вставить("Склад", ДокументыСервер.СкладПоУмолчанию());
	ДанныеАвтоЗаполнения.Вставить("СтавкаНДС", Перечисления.СтавкаНДС.НДС20);
	ДанныеАвтоЗаполнения.Вставить("Автор",КадрыСервер.ТекущийСотрудник()); 	
		
КонецПроцедуры

Функция ДанныеПровереныИГотовыКЗаписи()

	ДанныеГотовы = Истина;
	
	// Проверка на полное распределение товаров по счету.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетКонтрагентаТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	СчетКонтрагентаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ЕСТЬNULL(СчетКонтрагентаТовары.Количество, 0)) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТоварыПоСчету
		|ИЗ
		|	Документ.СчетКонтрагента.Товары КАК СчетКонтрагентаТовары
		|ГДЕ
		|	СчетКонтрагентаТовары.Ссылка = &СчетКонтрагента
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаТовары.НоменклатураПоставщика,
		|	СчетКонтрагентаТовары.ЕдиницаИзмерения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетКонтрагентаЗакрытыеПотребности.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика КАК ЕдиницаИзмеренияПоставщика,
		|	СУММА(ЕСТЬNULL(СчетКонтрагентаЗакрытыеПотребности.КоличествоЗакрытоеПоСчету, 0)) КАК КоличествоЗакрытоеПоСчету
		|ПОМЕСТИТЬ ВТ_ЗакрытаяПотребность
		|ИЗ
		|	Документ.СчетКонтрагента.ЗакрытыеПотребности КАК СчетКонтрагентаЗакрытыеПотребности
		|ГДЕ
		|	СчетКонтрагентаЗакрытыеПотребности.Ссылка = &СчетКонтрагента
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетКонтрагентаЗакрытыеПотребности.НоменклатураПоставщика,
		|	СчетКонтрагентаЗакрытыеПотребности.ЕдиницаИзмеренияПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ТоварыПоСчету.Количество, 0) - ЕСТЬNULL(ВТ_ЗакрытаяПотребность.КоличествоЗакрытоеПоСчету, 0) КАК ОсталосьРаспределить
		|ПОМЕСТИТЬ ВТ_ОсталосьРаспределить
		|ИЗ
		|	ВТ_ТоварыПоСчету КАК ВТ_ТоварыПоСчету
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ЗакрытаяПотребность КАК ВТ_ЗакрытаяПотребность
		|		ПО ВТ_ТоварыПоСчету.НоменклатураПоставщика = ВТ_ЗакрытаяПотребность.НоменклатураПоставщика
		|			И ВТ_ТоварыПоСчету.ЕдиницаИзмерения = ВТ_ЗакрытаяПотребность.ЕдиницаИзмеренияПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОсталосьРаспределить.ОсталосьРаспределить КАК ОсталосьРаспределить
		|ИЗ
		|	ВТ_ОсталосьРаспределить КАК ВТ_ОсталосьРаспределить
		|ГДЕ
		|	ВТ_ОсталосьРаспределить.ОсталосьРаспределить <> 0";
	
	Запрос.УстановитьПараметр("СчетКонтрагента", Ссылка);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		
		ДанныеГотовы = Ложь;	
		
	КонецЕсли;
				
	Возврат ДанныеГотовы;
	
КонецФункции

#КонецОбласти


